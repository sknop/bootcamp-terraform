---
all:
  vars:
    ansible_connection: ssh
    ansible_user: ubuntu
    ansible_become: true

    domain: ${domain_name}

    jmxexporter_enabled: true
    jmxexporter_version: 1.1.0
    jmxexporter_jar_url: https://github.com/prometheus/jmx_exporter/releases/download/1.1.0/jmx_prometheus_javaagent-1.1.0.jar
    jmxexporter_jar_url_force: true

%{ if length(zookeepers) > 0 }
zookeeper:
    hosts:
%{ for addr in zookeepers ~}
        ${addr}:
%{ endfor ~}
%{ endif ~}

%{ if length(kafka_controllers) > 0 }
kafka_controller:
    hosts:
%{ for addr,az in zipmap(kafka_controllers, kafka_controller_azs) ~}
        ${addr}:
            kafka_controller_custom_properties:
                broker.rack: ${az}
%{ endfor ~}
%{ endif ~}

kafka_broker:
    hosts:
%{ for addr,az in zipmap(kafka_brokers, kafka_broker_azs) ~}
        ${addr}:
            kafka_broker_custom_properties:
                broker.rack: ${az}
%{ endfor ~}

kafka_connect:
    hosts:
%{ for addr in kafka_connects ~}
        ${addr}:
%{ endfor ~}

schema_registry:
    hosts:
%{ for addr in schema_registries ~}
        ${addr}:
%{ endfor ~}

kafka_rest:
    hosts:
%{ for addr in kafka_rests ~}
        ${addr}:
%{ endfor ~}

ksql:
    hosts:
%{ for addr in ksqls ~}
        ${addr}:
%{ endfor ~}

%{ if length(control_centers) > 0 }
control_center:
    hosts:
%{ for addr in control_centers ~}
        ${addr}:
%{ endfor ~}
%{ endif ~}

%{ if length(control_center_next_gens) > 0 }
control_center_next_gen:
    hosts:
%{ for addr in control_center_next_gens ~}
        ${addr}:
%{ endfor ~}
%{ endif ~}

prometheus:
    hosts:
%{ for addr in prometheus ~}
        ${addr}:
%{ endfor ~}

grafana:
    hosts:
%{ for addr in grafana ~}
        ${addr}:
%{ endfor ~}

